@inject Front.Services.CustomAuthStateProvider authStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Front</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">       
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="users">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Users
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="products">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Products
            </NavLink>
        </div>

        @if(authStateProvider.CurrentUser != null)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="addproduct">
                    <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Add product
                </NavLink>
            </div>
        } 
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        authStateProvider.AuthenticationStateChanged += AuthStateChanged;
        base.OnInitialized();
    }

    private void AuthStateChanged(Task<AuthenticationState> authenticationState)
    {
        StateHasChanged();
    }
}
