# См. статью по ссылке https://aka.ms/customizecontainer, чтобы узнать как настроить контейнер отладки и как Visual Studio использует этот Dockerfile для создания образов для ускорения отладки.

# Этот этап используется при запуске из VS в быстром режиме (по умолчанию для конфигурации отладки)
FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
EXPOSE 80
EXPOSE 443


# Этот этап используется для сборки проекта службы
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src
COPY ["AuthService/API/AuthAPI/AuthAPI.csproj", "AuthService/API/AuthAPI/"]
COPY ["Common/Constants/Constants.csproj", "Common/Constants/"]
COPY ["Common/Extensions/Extensions.csproj", "Common/Extensions/"]
COPY ["Common/HashProvider/HashProvider.csproj", "Common/HashProvider/"]
COPY ["Common/Exceptions/Exceptions.csproj", "Common/Exceptions/"]
COPY ["AuthService/Core/Application/Application.csproj", "AuthService/Core/Application/"]
COPY ["Common/EmailSender/EmailSender.csproj", "Common/EmailSender/"]
COPY ["Common/Response/CustomResponse.csproj", "Common/Response/"]
COPY ["AuthService/Core/Domain/Domain.csproj", "AuthService/Core/Domain/"]
COPY ["Common/Repository/Repository.csproj", "Common/Repository/"]
COPY ["Common/Cache/Cache.csproj", "Common/Cache/"]
COPY ["AuthService/Infrastructure/Infrastructure/Infrastructure.csproj", "AuthService/Infrastructure/Infrastructure/"]
COPY ["AuthService/Infrastructure/Persistence/Persistence.csproj", "AuthService/Infrastructure/Persistence/"]
RUN dotnet restore "./AuthService/API/AuthAPI/AuthAPI.csproj"
COPY . .
WORKDIR "/src/AuthService/API/AuthAPI"
RUN dotnet build "./AuthAPI.csproj" -c $BUILD_CONFIGURATION -o /app/build

# Этот этап используется для публикации проекта службы, который будет скопирован на последний этап
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./AuthAPI.csproj" -c $BUILD_CONFIGURATION -o /app/publish /p:UseAppHost=false

# Этот этап используется в рабочей среде или при запуске из VS в обычном режиме (по умолчанию, когда конфигурация отладки не используется)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "AuthAPI.dll"]